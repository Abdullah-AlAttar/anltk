


name: Build CI wheels

on: [push]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-latest]

    steps:

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v2
      - uses: snickerbockers/submodules-init@v4

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.1.1 pybind11==2.7.1 ninja meson
      - name: Build C++ with meson
      - run : |
          meson builddir --buildtype=release -Dbuild_tests=true --prefix=/usr/local --libdir=lib && cd builddir && ninja test
      - name: Build wheels for CPython 3.9
        run: |
          python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "cp39-*"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2010
          CIBW_MANYLINUX_I686_IMAGE: manylinux2010

      - name: Build wheels for CPython
        run: |
          python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "cp37-* cp38-*"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2010
          CIBW_MANYLINUX_I686_IMAGE: manylinux2010

      - name: Build wheels for PyPy
        run: |
          python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "pp37-*"

      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./dist/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
      - uses: snickerbockers/submodules-init@v4

        name: Install Python
        with:
          python-version: '3.8'

      - name: Install pybind11
        run: python -m pip install pybind11==2.7.1
      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz
