


name: Build CI wheels

on:
  push:
    branches:
      - master
      - v[0-9]+.[0-9]+.x
    tags:
      - v*

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-latest, macos-latest]
        cibw_archs: ["auto"]
        include:
          - os: ubuntu-18.04
            cibw_archs: "aarch64"

    steps:
      - name: Set up QEMU
        if: matrix.cibw_archs == 'aarch64'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v2
      - uses: snickerbockers/submodules-init@v4

        name: Install Python
        with:
          python-version: '3.7'


      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.1.1 pybind11==2.7.1
      - name: Build minimum NumPy for aarch64
        env:
          CIBW_BUILD: "cp37-* cp38-*"
          CIBW_ARCHS: aarch64

      - name: Build wheels for CPython 3.9
        run: |
          python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "cp39-*"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux1
          CIBW_MANYLINUX_I686_IMAGE: manylinux1
          CIBW_ARCHS: ${{ matrix.cibw_archs }}

      - name: Build wheels for CPython
        run: |
          python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "cp37-* cp38-*"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux1
          CIBW_MANYLINUX_I686_IMAGE: manylinux1
          CIBW_ARCHS: ${{ matrix.cibw_archs }}

      - name: Build wheels for PyPy
        run: |
          python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "pp37-*"
          CIBW_ARCHS: ${{ matrix.cibw_archs }}
        if: matrix.cibw_archs != 'aarch64'

      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./dist/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
      - uses: snickerbockers/submodules-init@v4

        name: Install Python
        with:
          python-version: '3.8'

      - name: Install pybind11
        run: python -m pip install pybind11==2.7.1
      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

on: [push]
name: build
jobs:
  linux-macos-win:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest]
        include:
          - {name: Linux, python: '3.9', os: ubuntu-latest}
    env:
      CIBW_SKIP: cp35-* pp*

    steps:

    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
    - uses: snickerbockers/submodules-init@v4

      with:
        python-version: 3.9

    - name: Install cibuildwheel
      run: pip install cibuildwheel pybind11==2.7.1

    # - name: (Windows) install Visual C++ for Python 2.7
    #   if: matrix.os == 'windows-latest'
    #   run: |
    #     choco install vcpython27 -f -y

    - name: build cibuildwheel
      run: cibuildwheel .

    - name: Create wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: wheelhouse


